{"version":3,"sources":["components/DefaultLights.tsx","components/PlanAndAxis.tsx","pages/Example01.tsx","pages/Example02.tsx","pages/Example03.tsx","components/Layouts/Space.tsx","components/Layouts/Flex.tsx","pages/Example04.tsx","pages/Example05.tsx","pages/Snippet01.tsx","components/Objects/Chick.tsx","pages/Example06.tsx","pages/journey/Lesson03.tsx","pages/journey/Lesson10.tsx","pages/journey/Lesson11.tsx","pages/journey/Lesson12.tsx","pages/journey/Lesson13.tsx","pages/journey/Lesson14.tsx","utils/hooks/useUv2.tsx","pages/journey/Lesson15.tsx","pages/examplesUtil.tsx","components/MyCharacter.tsx","pages/Home.tsx","App.tsx","index.tsx"],"names":["DefaultLights","castShadow","position","intensity","color","Color","PlaneAndAxis","width","length","planeColor","hideAxis","rotation","Math","PI","receiveShadow","attach","args","opacity","min","Example01","colorManagement","shadowMap","camera","fov","near","far","OrbitControls","CubeMesh","cube","useRef","ref","SphereMesh","sphere","step","useFrame","current","y","abs","sin","x","cos","Example02","range","map","i","RandomCube","cubeSize","ceil","random","cubeColor","round","SimpleDiamond","meshRef","materials","MeshLambertMaterial","transparent","MeshBasicMaterial","wireframe","useEffect","computeFaceNormals","h","vertices","Vector3","faces","Face3","material","Example03","useState","setCamera","ToggleButtonGroup","value","exclusive","onChange","_","newValue","ToggleButton","orthographic","Cubes","flatten","PLANE_WIDTH","PLANE_LENGTH","j","rnd","Camera","PerspectiveCamera","makeDefault","zoom","OrthographicCamera","left","window","innerWidth","right","top","innerHeight","bottom","Space","styled","div","props","height","Column","Row","Example04","AmbientLightDemo","setColor","setIntensity","ambientRef","Container","Typography","variant","c","hex","hideTextfield","disableAlpha","style","Slider","max","Wrapper","PointLightDemo","setPosition","lightSourceRef","animate","deg","prev","requestAnimationFrame","z","handlePosChange","pos","temp","Button","onClick","v","toPrecision","toString","SpotLightDemo","distance","setDistance","angle","setAngle","DirectionLightDemo","undefined","s","useCallback","l","shadow","Content","Sphere","Example05","BasicCubes","Html","NormalCubes","flat","setFlat","flatShading","needsUpdate","Switch","checked","FaceCube","attachArray","LambertCube","PhongCube","Box","scale","Controls","useThree","gl","useSpring","from","to","autoRotate","target","domElement","Snippet01","SkyBox","scene","loader","CubeTextureLoader","background","load","process","e","console","log","MODEL_PATH","Model","group","useGLTF","nodes","animations","useAnimations","actions","names","moving","setMoving","dispose","reset","fadeIn","play","fadeOut","object","Bone","Icosphere_1","geometry","skeleton","Icosphere_2","preload","Example06","fallback","Loader","progress","useProgress","center","Lesson03","clock","Clock","elasped","getElapsedTime","Lesson10","num","orbitControls","package","state","setState","Text","fontSize","maxWidth","lineHeight","letterSpacing","textAlign","font","anchorX","anchorY","data","onUpdate","newState","path","label","Lesson11","TextureLoader","texture","dimondTexture","f","setF","magFilter","NearestFilter","LinearFilter","double_sided","metalness","roughness","showSkyBox","square","donut","plane","side","DoubleSide","isUndefined","MeshStandardMaterial","envMap","Lesson12","textureLoader","doorColorTexture","doorAlphaTexture","matcapTexture","doorHeightTexture","doorNormalTexture","materialMap","basic","colored_door","red_door","alpha_color_door","alphaMap","normal_material","MeshNormalMaterial","matcap","MeshMatcapMaterial","depth","MeshDepthMaterial","lambert","phong","MeshPhongMaterial","toon","MeshToonMaterial","standard","displacement_map","displacementMap","displacementScale","displacement_map_wireframe","disp_and_normal","normalMap","disp_and_normal_and_alpha","options","Object","keys","Lesson13","useLoader","FontLoader","textOptions","useMemo","size","curveSegments","bevelEnabled","bevelThickness","bevelOffset","bevelSize","bevelSegments","geoRef","geo","donutGeometry","TorusGeometry","donutMaterial","Array","Donut","children","Lesson14","onCreated","setClearColor","type","PCFSoftShadowMap","Lights","spotLightTarget","Object3D","directionalLightRef","pointLightRef","spotLightRef","hemisphereLightRef","useHelper","DirectionalLightHelper","PointLightHelper","SpotLightHelper","HemisphereLightHelper","dCamera","mapSize","set","useUv2","g","setAttribute","Float32BufferAttribute","attributes","uv","array","Lesson15","setPixelRatio","devicePixelRatio","zoomSpeed","House","Walls","colorTexture","roughnessTexture","aoTexture","normalTexture","aoMap","roughnessMap","Roof","Door","alphaTexture","metalnessTexture","heightTexture","doorLight","elapsed","metalnessMap","Graves","BoxBufferGeometry","dist","Bushes","SphereBufferGeometry","Ghosts","ghost1","ghost2","ghost3","rand1","Floor","t","repeat","wrapS","RepeatWrapping","wrapT","allExamples","render","description","otherExamples","title","threeJsJourney","MyCharacter","rest","gltf","Home","Grid","item","xs","container","justify","spacing","index","App","basename","exact","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0e5aeb2e.chunk.js","sourcesContent":["import { Color } from \"three\";\nimport React from \"react\";\n\nexport const DefaultLights: React.FC = () => {\n    return (\n        <>\n            <spotLight castShadow position={[50, 60, 25]} intensity={2} />\n            <ambientLight color={new Color(0x0c0c0c)} position={[-10, 10, 0]} />\n            <spotLight position={[-50, 10, 0]} intensity={0.1} />\n            <pointLight position={[-10, 0, -20]} intensity={0.5} />\n            <pointLight position={[0, -10, 0]} intensity={1.5} />\n        </>\n    );\n};\n","import React from \"react\";\nimport { Color } from \"three\";\n\ninterface IProps {\n    width?: number;\n    length?: number;\n    planeColor?: Color;\n    hideAxis?: boolean;\n}\n\nexport const PlaneAndAxis: React.FC<IProps> = ({\n    width,\n    length,\n    planeColor,\n    hideAxis,\n}) => {\n    return (\n        <>\n            <mesh rotation={[-0.5 * Math.PI, 0, 0]} receiveShadow>\n                <planeBufferGeometry\n                    attach=\"geometry\"\n                    args={[width ?? 60, length ?? 40]}\n                />\n                <shadowMaterial opacity={0.3} />\n            </mesh>\n            <mesh rotation={[-0.5 * Math.PI, 0, 0]}>\n                <planeBufferGeometry\n                    attach=\"geometry\"\n                    args={[width ?? 60, length ?? 40]}\n                />\n                <meshLambertMaterial\n                    attach=\"material\"\n                    color={planeColor ?? \"lightgray\"}\n                />\n            </mesh>\n            {!hideAxis ? (\n                <axesHelper args={[Math.min(width ?? 60, length ?? 40) / 2]} />\n            ) : null}\n        </>\n    );\n};\n","import { OrbitControls } from \"drei\";\nimport React, { useRef } from \"react\";\nimport { Canvas, useFrame } from \"react-three-fiber\";\nimport { Color, Mesh } from \"three\";\nimport { DefaultLights } from \"../components/DefaultLights\";\nimport { PlaneAndAxis } from \"../components/PlanAndAxis\";\n\nexport const Example01: React.FC = () => {\n    return (\n        <>\n            <Canvas\n                colorManagement\n                shadowMap\n                camera={{\n                    fov: 45,\n                    near: 0.1,\n                    far: 1000,\n                    position: [10, 35, 50],\n                }}\n            >\n                <DefaultLights />\n                <PlaneAndAxis />\n                <CubeMesh />\n                <SphereMesh />\n                <OrbitControls />\n            </Canvas>\n        </>\n    );\n};\n\nconst CubeMesh = () => {\n    const cube = useRef<Mesh>(null);\n    return (\n        <mesh ref={cube} position={[-14, 2, 0]} castShadow>\n            <boxGeometry attach=\"geometry\" args={[8, 4, 8]} />\n            <meshLambertMaterial\n                attach=\"material\"\n                color={new Color(0x33becc)}\n            />\n        </mesh>\n    );\n};\n\nconst SphereMesh = () => {\n    const sphere = useRef<Mesh>(null);\n\n    let step = 0;\n\n    useFrame(() => {\n        if (sphere.current) {\n            step += 0.05;\n            sphere.current.position.y = 3 + 15 * Math.abs(Math.sin(step));\n            sphere.current.position.x = 20 + 5 * Math.cos(step);\n        }\n    });\n\n    return (\n        <mesh ref={sphere} position={[20, 4, 2]} castShadow>\n            <sphereGeometry attach=\"geometry\" args={[4, 40, 40]} />\n            <meshLambertMaterial\n                attach=\"material\"\n                color={new Color(0xcc3347)}\n            />\n        </mesh>\n    );\n};\n","import { OrbitControls } from \"drei\";\nimport React, { useEffect, useRef } from \"react\";\nimport { Canvas, useFrame } from \"react-three-fiber\";\nimport {\n    Color,\n    Face3,\n    Geometry,\n    Mesh,\n    MeshBasicMaterial,\n    MeshLambertMaterial,\n    Vector3,\n} from \"three\";\nimport { range } from \"lodash\";\nimport { DefaultLights } from \"../components/DefaultLights\";\nimport { PlaneAndAxis } from \"../components/PlanAndAxis\";\n/**\n * Working with Basic components and objects\n */\nexport const Example02: React.FC = () => {\n    return (\n        <>\n            <Canvas\n                colorManagement\n                shadowMap\n                camera={{\n                    fov: 45,\n                    near: 0.1,\n                    far: 1000,\n                    position: [10, 35, 50],\n                }}\n            >\n                <DefaultLights />\n                <PlaneAndAxis />\n                <OrbitControls />\n                {range(10).map((i: number) => (\n                    <RandomCube key={i} />\n                ))}\n                <SimpleDiamond />\n            </Canvas>\n        </>\n    );\n};\n\nconst RandomCube = () => {\n    const cubeSize = Math.ceil(Math.random() * 3);\n    const cubeColor = new Color(0xffffff * Math.random());\n    return (\n        <mesh\n            position={[\n                Math.round(-25 + Math.random() * 50),\n                Math.round(2),\n                Math.round(-15 + Math.random() * 30),\n            ]}\n            castShadow\n        >\n            <boxGeometry\n                attach=\"geometry\"\n                args={[cubeSize, cubeSize, cubeSize]}\n            />\n            <meshLambertMaterial attach=\"material\" color={cubeColor} />\n        </mesh>\n    );\n};\n\nconst SimpleDiamond = () => {\n    const ref = useRef<Geometry>(null);\n    const meshRef = useRef<Mesh>(null);\n\n    const materials = [\n        new MeshLambertMaterial({\n            opacity: 0.6,\n            color: 0x44ff44,\n            transparent: true,\n        }),\n        new MeshBasicMaterial({ color: 0x000000, wireframe: true }),\n    ];\n\n    /**\n     * Is this the correct way???\n     */\n    useEffect(() => {\n        if (ref.current) {\n            ref.current.computeFaceNormals();\n        }\n    });\n\n    useFrame(() => {\n        if (meshRef.current) {\n            meshRef.current.rotation.y += 0.01;\n        }\n    });\n\n    const h = 4 * Math.sin(Math.PI / 3);\n    const w = 2;\n\n    const vertices = [\n        new Vector3(-4, 4, 0),\n        new Vector3(-w, 4, h),\n        new Vector3(w, 4, h),\n        new Vector3(4, 4, 0),\n        new Vector3(w, 4, -h),\n        new Vector3(-w, 4, -h),\n        new Vector3(0, 4, 0),\n        new Vector3(0, 0, 0),\n    ];\n\n    const faces = [\n        new Face3(0, 1, 6),\n        new Face3(1, 2, 6),\n        new Face3(2, 3, 6),\n        new Face3(3, 4, 6),\n        new Face3(4, 5, 6),\n        new Face3(5, 0, 6),\n        new Face3(0, 1, 7),\n        new Face3(1, 2, 7),\n        new Face3(2, 3, 7),\n        new Face3(3, 4, 7),\n        new Face3(4, 5, 7),\n        new Face3(5, 0, 7),\n    ];\n\n    return (\n        <mesh\n            ref={meshRef}\n            castShadow\n            position={[0, 5, 0]}\n            material={materials}\n        >\n            <geometry\n                ref={ref}\n                attach=\"geometry\"\n                vertices={vertices}\n                faces={faces}\n            />\n            {/*<meshPhongMaterial attachArray='material' color='lightblue'/>*/}\n        </mesh>\n    );\n};\n","import React, { useRef, useState } from \"react\";\nimport { Canvas, useFrame } from \"react-three-fiber\";\nimport { OrbitControls, OrthographicCamera, PerspectiveCamera } from \"drei\";\nimport { PlaneAndAxis } from \"../components/PlanAndAxis\";\n\nimport { ToggleButton, ToggleButtonGroup } from \"@material-ui/lab\";\nimport { flatten, range } from \"lodash\";\nimport { Color, Group } from \"three\";\n\nconst PLANE_WIDTH = 180;\nconst PLANE_LENGTH = 180;\n\nexport const Example03: React.FC = () => {\n    const [camera, setCamera] = useState(false);\n\n    return (\n        <>\n            <ToggleButtonGroup\n                value={camera}\n                exclusive\n                onChange={(_, newValue) => setCamera(newValue)}\n            >\n                <ToggleButton value={false}>perspective</ToggleButton>\n                <ToggleButton value={true}>orthographic</ToggleButton>\n            </ToggleButtonGroup>\n\n            <Canvas colorManagement shadowMap>\n                <Camera orthographic={camera} />\n                <spotLight\n                    castShadow\n                    position={[-150, 60, -25]}\n                    intensity={4}\n                />\n                <ambientLight color={new Color(0x292929)} />\n                <OrbitControls />\n                <Cubes />\n            </Canvas>\n        </>\n    );\n};\n\nconst Cubes = () => {\n    const ref = useRef<Group>(null);\n    useFrame(() => {\n        if (ref.current) {\n            ref.current.rotation.y += 0.005;\n        }\n    });\n    return (\n        <group ref={ref} position={[0, 0, 0]}>\n            <PlaneAndAxis width={PLANE_WIDTH} length={PLANE_LENGTH} hideAxis />\n\n            {flatten(\n                range(0, PLANE_WIDTH / 5).map((i) =>\n                    range(0, PLANE_LENGTH / 5).map((j) => {\n                        const rnd = Math.random() * 0.75 + 0.25;\n                        return (\n                            <mesh\n                                key={`${i}-${j}`}\n                                position={[\n                                    -(PLANE_WIDTH / 2) + 2 + i * 5,\n                                    2,\n                                    -(PLANE_LENGTH / 2) + 2 + j * 5,\n                                ]}\n                            >\n                                <boxBufferGeometry args={[4, 4, 4]} />\n                                <meshLambertMaterial\n                                    color={new Color(rnd, 0, 0)}\n                                />\n                            </mesh>\n                        );\n                    })\n                )\n            )}\n        </group>\n    );\n};\n\nconst Camera: React.FC<{ orthographic?: boolean }> = ({ orthographic }) => {\n    return (\n        <>\n            <PerspectiveCamera\n                position={[120, 60, 180]}\n                fov={45}\n                near={0.01}\n                far={1000}\n                makeDefault={!orthographic}\n                zoom={0.7}\n            />\n            <OrthographicCamera\n                left={window.innerWidth / -16}\n                right={window.innerWidth / 16}\n                top={window.innerHeight / 16}\n                bottom={window.innerHeight / -16}\n                position={[120, 60, 180]}\n                near={-200}\n                far={500}\n                zoom={6}\n                makeDefault={orthographic}\n            />\n        </>\n    );\n};\n","import styled from \"styled-components\";\n\nexport const Space = styled.div<{ width?: number; height?: number }>`\n    flex-grow: 0;\n    flex-shrink: 0;\n    ${(props) => {\n        if (props.width) {\n            return `flex-basis: ${props.width}px; min-width: ${props.width}px; height: 0;`;\n        }\n        if (props.height) {\n            return `flex-basis: ${props.height}px; min-height: ${props.height}px; width: 0;`;\n        }\n        return \"\";\n    }}\n`;\n","import styled from \"styled-components\";\n\nexport const Column = styled.div`\n    display: flex;\n    flex-direction: column;\n`;\n\nexport const Row = styled.div`\n    display: flex;\n    flex-direction: row;\n`;\n","import React, { useEffect, useRef, useState, useCallback } from \"react\";\nimport { Canvas } from \"react-three-fiber\";\nimport { PlaneAndAxis } from \"../components/PlanAndAxis\";\nimport { Button, Container, Slider, Typography } from \"@material-ui/core\";\nimport {\n    AmbientLight,\n    Camera,\n    Color,\n    DirectionalLight,\n    Mesh,\n    PointLight,\n    SpotLight,\n} from \"three\";\nimport { OrbitControls } from \"drei\";\nimport { Color as MaterialColor, ColorPicker } from \"material-ui-color\";\nimport styled from \"styled-components\";\nimport { Space } from \"../components/Layouts/Space\";\nimport { Row, Column } from \"../components/Layouts/Flex\";\n\nexport const Example04: React.FC = () => {\n    return (\n        <>\n            <AmbientLightDemo />\n            <Space height={40} />\n            <PointLightDemo />\n            <Space height={40} />\n            <SpotLightDemo />\n            <Space height={40} />\n            <DirectionLightDemo />\n            <Space height={80} />\n            end\n        </>\n    );\n};\n\nconst AmbientLightDemo: React.FC = () => {\n    const [color, setColor] = useState(\"DBEF81\");\n    const [intensity, setIntensity] = useState(1);\n\n    const handleChangeColor = (c: MaterialColor) => {\n        setColor(c.hex);\n    };\n\n    const handleChangeIntensity = (\n        _: React.ChangeEvent<any>,\n        value: number | number[]\n    ) => {\n        if (typeof value === \"number\") {\n            setIntensity(value);\n        }\n    };\n\n    const ambientRef = useRef<AmbientLight>(null);\n\n    useEffect(() => {\n        if (ambientRef.current) {\n            ambientRef.current.color = new Color(+`0x${color}`);\n            ambientRef.current.intensity = intensity;\n        }\n    }, [color, intensity]);\n\n    return (\n        <>\n            <Container>\n                <Typography variant=\"h3\">\n                    Ambient Light - a globally applied light source{\" \"}\n                </Typography>\n                <Typography variant=\"subtitle1\">\n                    An ambient light source is not light from a specific\n                    direction, so it does not contribute to any shadows. It\n                    applies globally. Should be used together with other light\n                    sources\n                </Typography>\n                <Space height={16} />\n                <Row>\n                    <div>\n                        <Typography variant=\"h5\">Color</Typography>\n                        <ColorPicker\n                            onChange={handleChangeColor}\n                            value={`#${color}`}\n                            hideTextfield\n                            disableAlpha\n                        />\n                    </div>\n                    <Space width={24} />\n                    <div style={{ width: 300 }}>\n                        <Typography variant=\"h5\">\n                            Intensity: {intensity}\n                        </Typography>\n                        <Slider\n                            value={intensity}\n                            onChange={handleChangeIntensity}\n                            step={0.1}\n                            min={0}\n                            max={5}\n                        />\n                    </div>\n                </Row>\n            </Container>\n            <Space height={24} />\n            <Wrapper>\n                <Canvas\n                    colorManagement\n                    shadowMap\n                    camera={{\n                        position: [10, 20, -40],\n                    }}\n                >\n                    <ambientLight\n                        intensity={1}\n                        color={new Color(+`0x${color}`)}\n                        ref={ambientRef}\n                    />\n                    <spotLight\n                        position={[20, 20, -10]}\n                        intensity={1}\n                        castShadow\n                    />\n                    <OrbitControls />\n                    <Content />\n                </Canvas>\n            </Wrapper>\n        </>\n    );\n};\n\nconst PointLightDemo: React.FC = () => {\n    const [position, setPosition] = useState<[x: number, y: number, z: number]>(\n        [10, 20, 0]\n    );\n    const ref = useRef<PointLight>(null);\n    const lightSourceRef = useRef<Mesh>(null);\n\n    function animate(step: number) {\n        const deg = Math.PI / 60;\n        setPosition((prev) => {\n            return [\n                prev[0] * Math.cos(deg) - prev[2] * Math.sin(deg),\n                prev[1],\n                prev[2] * Math.cos(deg) + prev[0] * Math.sin(deg),\n            ];\n        });\n\n        if (step !== 0) {\n            requestAnimationFrame(() => animate(step - 1));\n        }\n    }\n\n    useEffect(() => {\n        if (ref.current) {\n            [\n                ref.current.position.x,\n                ref.current.position.y,\n                ref.current.position.z,\n            ] = position;\n        }\n\n        if (lightSourceRef.current) {\n            [\n                lightSourceRef.current.position.x,\n                lightSourceRef.current.position.y,\n                lightSourceRef.current.position.z,\n            ] = position;\n        }\n    }, [position]);\n\n    const handlePosChange = (pos: 0 | 1 | 2, value: number | number[]) => {\n        if (typeof value === \"number\") {\n            setPosition((prev) => {\n                const temp: [x: number, y: number, z: number] = [\n                    prev[0],\n                    prev[1],\n                    prev[2],\n                ];\n                temp[pos] = value;\n                return temp;\n            });\n        }\n    };\n\n    return (\n        <>\n            <Container>\n                <Typography variant=\"h3\">\n                    Point Light - shines in all directions\n                </Typography>\n                <Typography variant=\"subtitle1\">\n                    A good example of a point light is a signal flare fired in\n                    the night sky\n                </Typography>\n                <Space height={16} />\n                <Row>\n                    <div>\n                        <Typography variant=\"h5\">Rotate 360 deg </Typography>\n                        <Button onClick={() => animate(120)}>Rotate</Button>\n                    </div>\n                    <Space width={24} />\n                    <div>\n                        <Typography variant=\"h5\">\n                            Light Position:{\" \"}\n                            {position.map((v) => v.toPrecision(2)).toString()}{\" \"}\n                        </Typography>\n                        <Column>\n                            <Row style={{ width: 300 }}>\n                                <Typography variant=\"h5\">x</Typography>\n                                <Space width={8} />\n                                <Slider\n                                    value={position[0]}\n                                    onChange={(_, value) =>\n                                        handlePosChange(0, value)\n                                    }\n                                    step={1}\n                                    min={-30}\n                                    max={30}\n                                />\n                            </Row>\n                            <Row style={{ width: 300 }}>\n                                <Typography variant=\"h5\">y</Typography>\n                                <Space width={8} />\n                                <Slider\n                                    value={position[1]}\n                                    onChange={(_, value) =>\n                                        handlePosChange(1, value)\n                                    }\n                                    step={1}\n                                    min={0}\n                                    max={40}\n                                />\n                            </Row>\n                            <Row style={{ width: 300 }}>\n                                <Typography variant=\"h5\">z</Typography>\n                                <Space width={8} />\n                                <Slider\n                                    value={position[2]}\n                                    onChange={(_, value) =>\n                                        handlePosChange(2, value)\n                                    }\n                                    step={1}\n                                    min={-30}\n                                    max={30}\n                                />\n                            </Row>\n                        </Column>\n                    </div>\n                </Row>\n            </Container>\n            <Space height={24} />\n            <Wrapper>\n                <Canvas\n                    colorManagement\n                    shadowMap\n                    camera={{\n                        position: [10, 20, -40],\n                    }}\n                >\n                    <pointLight position={position} intensity={1} castShadow />\n                    <OrbitControls />\n                    <Content />\n                    <Sphere pos={[20, 4, 20]} />\n                    <Sphere pos={[-20, 4, 20]} />\n                    <Sphere pos={[20, 4, -20]} />\n                    <Sphere pos={[-20, 4, -20]} />\n                    <ambientLight intensity={1} color=\"white\" />\n\n                    <mesh position={position}>\n                        <sphereBufferGeometry\n                            attach=\"geometry\"\n                            args={[0.5, 40, 40]}\n                        />\n                        <meshLambertMaterial color=\"red\" />\n                    </mesh>\n                </Canvas>\n            </Wrapper>\n        </>\n    );\n};\n\nconst SpotLightDemo: React.FC = () => {\n    const ref = useRef<SpotLight>(null);\n\n    const [distance, setDistance] = useState(25);\n    const [angle, setAngle] = useState(Math.PI / 3);\n\n    useEffect(() => {\n        if (ref.current) {\n            ref.current.distance = distance;\n            ref.current.angle = angle;\n        }\n    }, [distance, angle]);\n\n    return (\n        <>\n            <Container>\n                <Typography variant=\"h3\">\n                    Spot Light - the light with a cone effect\n                </Typography>\n                <Typography variant=\"subtitle1\">\n                    A SpotLight is probably one of the lights that you'll use\n                    most often (especially if you want a shadow). You can\n                    compare this with a flashlight, or a lantern. This light has\n                    a direction and an angle at which it produces light.\n                </Typography>\n                <Space height={16} />\n                <Row>\n                    <div>\n                        <Typography variant=\"h5\">\n                            Distance {distance}\n                        </Typography>\n                        <Column>\n                            <Row style={{ width: 300 }}>\n                                <Typography variant=\"h5\">x</Typography>\n                                <Space width={8} />\n                                <Slider\n                                    value={distance}\n                                    onChange={(_, value) => {\n                                        if (typeof value === \"number\") {\n                                            setDistance(value);\n                                        }\n                                    }}\n                                    step={1}\n                                    min={15}\n                                    max={50}\n                                />\n                            </Row>\n                        </Column>\n                    </div>\n                    <Space height={16} />\n                    <div>\n                        <Typography variant=\"h5\">Angle {angle}</Typography>\n                        <Column>\n                            <Row style={{ width: 300 }}>\n                                <Typography variant=\"h5\">theta</Typography>\n                                <Space width={8} />\n                                <Slider\n                                    value={angle}\n                                    onChange={(_, value) => {\n                                        if (typeof value === \"number\") {\n                                            setAngle(value);\n                                        }\n                                    }}\n                                    step={0.1}\n                                    min={0}\n                                    max={Math.PI * 0.8}\n                                />\n                            </Row>\n                        </Column>\n                    </div>\n                </Row>\n            </Container>\n            <Space height={24} />\n            <Wrapper>\n                <Canvas\n                    colorManagement\n                    shadowMap\n                    camera={{\n                        position: [10, 20, -40],\n                    }}\n                >\n                    <spotLight\n                        position={[0, 20, 0]}\n                        intensity={1}\n                        castShadow\n                        angle={Math.PI / 3}\n                        distance={21}\n                        ref={ref}\n                    />\n                    <Sphere pos={[-10, 10, -10]} />\n\n                    <mesh position={[0, 20, 0]}>\n                        <sphereBufferGeometry\n                            attach=\"geometry\"\n                            args={[0.5, 40, 40]}\n                        />\n                        <meshLambertMaterial color=\"red\" />\n                    </mesh>\n                    <ambientLight intensity={0.5} />\n                    <OrbitControls />\n                    <Content />\n                </Canvas>\n            </Wrapper>\n        </>\n    );\n};\n\nconst DirectionLightDemo: React.FC = () => {\n    const [c, s] = useState<Camera | undefined>(undefined);\n\n    const ref = useCallback((l: DirectionalLight) => {\n        if (l) {\n            l.shadow.camera.far = 50;\n            l.shadow.camera.right = 10;\n            l.shadow.camera.left = -15;\n            l.shadow.camera.top = 10;\n            l.shadow.camera.bottom = -12;\n            s(l.shadow.camera);\n        }\n    }, []);\n\n    return (\n        <>\n            <Container>\n                <Typography variant=\"h3\">\n                    Directional Light - a far away sun-like light source{\" \"}\n                </Typography>\n                <Typography variant=\"subtitle1\">\n                    A Directional Light source can be seen as a light that is\n                    very far away. All the light rays that it sends out are\n                    parallel to each other. A good example for this is the sun.\n                    Everything receives the same intensity of light. Only the\n                    direction, the color, and the intensity of the load is used\n                    to calculate the colors and shadows.\n                </Typography>\n                <Space height={16} />\n            </Container>\n            <Space height={24} />\n            <Wrapper>\n                <Canvas\n                    colorManagement\n                    shadowMap\n                    camera={{\n                        position: [10, 20, -40],\n                    }}\n                >\n                    <directionalLight\n                        ref={ref}\n                        position={[-10, 30, 0]}\n                        intensity={1}\n                        castShadow\n                    />\n                    <Sphere pos={[-10, 10, -10]} />\n                    <OrbitControls />\n                    <Content />\n                    {c ? <cameraHelper args={[c]} /> : null}\n                </Canvas>\n            </Wrapper>\n        </>\n    );\n};\n\nconst Content = () => {\n    return (\n        <>\n            <Sphere />\n            <OrbitControls />\n            <PlaneAndAxis width={50} length={50} hideAxis />\n        </>\n    );\n};\n\nconst Sphere: React.FC<{ pos?: [x: number, y: number, z: number] }> = ({\n    pos,\n}) => {\n    const sphere = useRef<Mesh>(null);\n\n    return (\n        <mesh\n            ref={sphere}\n            position={pos ?? [0, 4, 0]}\n            castShadow\n            onClick={() => {\n                if (sphere.current) {\n                    sphere.current.position.x += 10;\n                }\n            }}\n        >\n            <sphereGeometry attach=\"geometry\" args={[4, 40, 40]} />\n            <meshLambertMaterial attach=\"material\" color=\"white\" />\n        </mesh>\n    );\n};\n\nconst Wrapper = styled(Container)`\n    height: 500px;\n    width: 75%;\n    background-color: rgba(250, 250, 250);\n    border: 5px solid grey;\n`;\n","import { Html, OrbitControls } from \"drei\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Canvas } from \"react-three-fiber\";\nimport { Color, MeshNormalMaterial } from \"three\";\nimport { Switch, Typography } from \"@material-ui/core\";\nimport { DefaultLights } from \"../components/DefaultLights\";\nimport { PlaneAndAxis } from \"../components/PlanAndAxis\";\n\nexport const Example05: React.FC = () => {\n    return (\n        <>\n            <Canvas\n                colorManagement\n                shadowMap\n                camera={{\n                    fov: 45,\n                    near: 0.1,\n                    far: 1000,\n                    position: [10, 35, 50],\n                }}\n            >\n                <DefaultLights />\n                <PlaneAndAxis hideAxis />\n                <OrbitControls />\n                <BasicCubes />\n                <FaceCube />\n                <NormalCubes />\n                <LambertCube />\n                <PhongCube />\n            </Canvas>\n        </>\n    );\n};\n\nconst BasicCubes = () => {\n    return (\n        <>\n            <group position={[0, 2, -8]}>\n                <Html position={[-1, 0, 0]}>Basic transparent</Html>\n                <mesh>\n                    <sphereBufferGeometry args={[2, 40, 40]} />\n                    <meshBasicMaterial\n                        color={new Color(0x777ff)}\n                        transparent\n                        opacity={0.5}\n                    />\n                </mesh>\n            </group>\n            <group position={[0, 2, 0]}>\n                <Html position={[-1, 0, 0]}>Basic</Html>\n                <mesh>\n                    <sphereBufferGeometry args={[2, 40, 40]} />\n                    <meshBasicMaterial color={new Color(0x777ff)} />\n                </mesh>\n            </group>\n            <group position={[0, 2, 8]}>\n                <Html position={[-1, 0, 0]}>Basic wireframe</Html>\n                <mesh>\n                    <sphereBufferGeometry args={[2, 10, 10]} />\n                    <meshBasicMaterial\n                        color={new Color(0)}\n                        wireframe\n                        opacity={0.2}\n                        transparent\n                    />\n                </mesh>\n            </group>\n            <group position={[0, 2, 16]}>\n                <Html position={[-1, 0, 0]}>Basic</Html>\n                <mesh>\n                    <sphereBufferGeometry args={[2, 40, 40]} />\n                    <meshBasicMaterial color={new Color(0x777ff)} />\n                </mesh>\n            </group>\n        </>\n    );\n};\n\nconst NormalCubes = () => {\n    const [flat, setFlat] = useState(true);\n    const handleChange = (_: React.ChangeEvent, value: boolean) => {\n        setFlat(value);\n    };\n\n    const ref = useRef<MeshNormalMaterial>(null);\n\n    useEffect(() => {\n        if (ref.current) {\n            ref.current.flatShading = flat;\n            ref.current.needsUpdate = true;\n        }\n    }, [flat]);\n\n    return (\n        <>\n            <group position={[16, 8, -8]}>\n                <Html position={[-1, 0, 0]}>\n                    <Typography variant=\"h5\"> Normal </Typography>\n                    <Typography>flat shading</Typography>{\" \"}\n                    <Switch checked={flat} onChange={handleChange} />\n                </Html>\n                <mesh>\n                    <sphereBufferGeometry args={[8, 16, 16]} />\n                    <meshNormalMaterial color={new Color(0x777ff)} ref={ref} />\n                </mesh>\n            </group>\n        </>\n    );\n};\n\nconst FaceCube = () => {\n    return (\n        <>\n            <group position={[-8, 2, 0]}>\n                <Html position={[-1, 0, 0]}>\n                    <Typography variant=\"h5\"> Faces </Typography>\n                </Html>\n                <mesh>\n                    <boxBufferGeometry attach=\"geometry\" args={[4, 4, 4]} />\n                    <meshBasicMaterial\n                        attachArray=\"material\"\n                        color={new Color(0x765aaa)}\n                    />\n                    <meshBasicMaterial attachArray=\"material\" color=\"green\" />\n                    <meshBasicMaterial attachArray=\"material\" color=\"blue\" />\n                    <meshBasicMaterial attachArray=\"material\" color=\"cyan\" />\n                    <meshBasicMaterial attachArray=\"material\" color=\"magenta\" />\n                    <meshBasicMaterial attachArray=\"material\" color=\"yellow\" />\n                </mesh>\n            </group>\n        </>\n    );\n};\n\nconst LambertCube = () => {\n    return (\n        <>\n            <group position={[-20, 4, -8]}>\n                <Html position={[-1, 0, 0]}>\n                    <Typography variant=\"h5\"> Lambert</Typography>\n                </Html>\n                <mesh>\n                    <sphereBufferGeometry\n                        attach=\"geometry\"\n                        args={[4, 30, 30]}\n                    />\n                    <meshLambertMaterial attach=\"material\" color=\"hotpink\" />\n                </mesh>\n            </group>\n        </>\n    );\n};\n\nconst PhongCube = () => {\n    return (\n        <>\n            <group position={[-20, 4, 8]}>\n                <Html position={[-1, 0, 0]}>\n                    <Typography variant=\"h5\"> Phong </Typography>\n                </Html>\n                <mesh>\n                    <sphereBufferGeometry\n                        attach=\"geometry\"\n                        args={[4, 30, 30]}\n                    />\n                    <meshPhongMaterial attach=\"material\" color=\"hotpink\" />\n                </mesh>\n            </group>\n        </>\n    );\n};\n","import { Canvas, useThree } from \"react-three-fiber\";\nimport { OrbitControls } from \"drei\";\nimport { useSpring } from \"react-spring/three\";\nimport React from \"react\";\nimport { CubeTextureLoader, Vector3 } from \"three\";\n\nconst Box: React.FC<{\n    position?: Vector3 | [x: number, y: number, z: number];\n}> = (props) => {\n    return (\n        <mesh {...props} scale={[1, 1, 1]}>\n            <boxBufferGeometry attach=\"geometry\" args={[4, 4, 4]} />\n            <meshStandardMaterial attach=\"material\" color=\"orange\" />\n        </mesh>\n    );\n};\nconst Controls = () => {\n    const { gl, camera } = useThree();\n\n    useSpring({\n        from: {\n            z: -50,\n        },\n        to: {\n            z: -10,\n        },\n        onChange: ({ z }: { z: number }) => {\n            camera.position.z = z;\n        },\n    });\n\n    return (\n        <OrbitControls\n            autoRotate\n            target={[0, 0, 0]}\n            args={[camera, gl.domElement]}\n        />\n    );\n};\n\nexport const Snippet01: React.FC = () => {\n    return (\n        <div style={{ height: \"100%\" }}>\n            <Canvas\n                colorManagement\n                camera={{\n                    position: [0, -2, 300],\n                }}\n            >\n                <ambientLight />\n                <pointLight position={[10, 10, 10]} />\n                <pointLight position={[30, 10, -10]} intensity={0.5} />\n                <Box position={[0, 2, 0]} />\n                <Controls />\n                <SkyBox />\n            </Canvas>\n        </div>\n    );\n};\n\nconst SkyBox = () => {\n    const { scene } = useThree();\n    const loader = new CubeTextureLoader();\n    scene.background = loader.load(\n        [\n            `${process.env.PUBLIC_URL}/assets/textures/env_maps/cubemap-parliament/posx.jpg`,\n            `${process.env.PUBLIC_URL}/assets/textures/env_maps/cubemap-parliament/negx.jpg`,\n            `${process.env.PUBLIC_URL}/assets/textures/env_maps/cubemap-parliament/posy.jpg`,\n            `${process.env.PUBLIC_URL}/assets/textures/env_maps/cubemap-parliament/negy.jpg`,\n            `${process.env.PUBLIC_URL}/assets/textures/env_maps/cubemap-parliament/posz.jpg`,\n            `${process.env.PUBLIC_URL}/assets/textures/env_maps/cubemap-parliament/negz.jpg`,\n        ],\n        undefined,\n        undefined,\n        (e) => {\n            console.log(e);\n        }\n    );\n\n    return null;\n};\n","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n\nimport * as THREE from \"three\";\nimport React, { useRef, useState } from \"react\";\nimport { useGLTF, useAnimations } from \"drei\";\n\nimport { GLTF } from \"three/examples/jsm/loaders/GLTFLoader\";\nimport { useFrame } from \"react-three-fiber\";\n\nconst MODEL_PATH = `${process.env.PUBLIC_URL}/assets/objects/Chick.gltf`;\n\ntype GLTFResult = GLTF & {\n    nodes: {\n        Icosphere_1: THREE.SkinnedMesh;\n        Icosphere_2: THREE.SkinnedMesh;\n        Bone: THREE.Bone;\n    };\n    materials: {\n        [\"Material.001\"]: THREE.MeshStandardMaterial;\n        [\"Material.002\"]: THREE.MeshStandardMaterial;\n    };\n};\n\nexport default function Model(props: JSX.IntrinsicElements[\"group\"]) {\n    const group = useRef<THREE.Group>() as React.MutableRefObject<THREE.Group>;\n    const { nodes, animations } = useGLTF(MODEL_PATH) as GLTFResult;\n    const { actions, names } = useAnimations(animations, group);\n\n    const [moving, setMoving] = useState(false);\n\n    const walk = () => {\n        actions[names[0]].reset().fadeIn(0.5).play();\n        setMoving(true);\n        return () => actions[names[0]].fadeOut(0.5);\n    };\n\n    useFrame(() => {\n        if (group.current && moving) {\n            group.current.position.x += 0.2;\n        }\n    });\n    return (\n        <group ref={group} {...props} dispose={null} onClick={walk} castShadow>\n            <group position={[-0.7, 0.08, -0.03]} scale={[1.32, 1.32, 1.32]}>\n                <primitive object={nodes.Bone} />\n                <skinnedMesh\n                    material={nodes.Icosphere_1.material}\n                    geometry={nodes.Icosphere_1.geometry}\n                    skeleton={nodes.Icosphere_1.skeleton}\n                />\n                <skinnedMesh\n                    material={nodes.Icosphere_2.material}\n                    geometry={nodes.Icosphere_2.geometry}\n                    skeleton={nodes.Icosphere_2.skeleton}\n                />\n            </group>\n        </group>\n    );\n}\nuseGLTF.preload(MODEL_PATH);\n","import React, { Suspense } from \"react\";\nimport { Canvas } from \"react-three-fiber\";\nimport { DefaultLights } from \"../components/DefaultLights\";\nimport Chick from \"../components/Objects/Chick\";\nimport { Html, OrbitControls, useProgress } from \"drei\";\nimport { PlaneAndAxis } from \"../components/PlanAndAxis\";\n\nexport const Example06: React.FC = () => {\n    return (\n        <Canvas\n            colorManagement\n            shadowMap\n            camera={{\n                fov: 45,\n                near: 0.1,\n                far: 1000,\n                position: [10, 35, 50],\n            }}\n        >\n            <group position={[0, -10, 0]}>\n                <Suspense fallback={<Loader />}>\n                    <Chick position={[-20, 8, 0]} scale={[4, 4, 4]} />\n                    <PlaneAndAxis hideAxis />\n                </Suspense>\n            </group>\n            <DefaultLights />\n            <OrbitControls />\n        </Canvas>\n    );\n};\n\nfunction Loader() {\n    const { progress } = useProgress();\n    return <Html center>{progress} % loaded</Html>;\n}\n","import React, { useRef } from \"react\";\nimport { Canvas } from \"react-three-fiber\";\nimport { Clock, Mesh } from \"three\";\n\nexport const Lesson03: React.FC = () => {\n    const ref = useRef<Mesh>(null);\n    const clock = new Clock();\n\n    const animate = () => {\n        const elasped = clock.getElapsedTime();\n        if (ref.current) {\n            ref.current.rotation.y = elasped;\n        }\n\n        requestAnimationFrame(animate);\n    };\n\n    animate();\n\n    return (\n        <Canvas\n            colorManagement\n            shadowMap\n            camera={{\n                fov: 45,\n                position: [1, 1, 5],\n            }}\n        >\n            <mesh ref={ref}>\n                <boxGeometry args={[1, 1, 1]} />\n                <meshBasicMaterial color={\"red\"} />\n            </mesh>\n        </Canvas>\n    );\n};\n","import React, { useRef, useState } from \"react\";\nimport { Canvas } from \"react-three-fiber\";\nimport { Mesh } from \"three\";\nimport DatGui, {\n    DatBoolean,\n    DatColor,\n    DatNumber,\n    DatString,\n} from \"react-dat-gui\";\nimport \"react-dat-gui/dist/index.css\";\nimport { DefaultLights } from \"../../components/DefaultLights\";\nimport { OrbitControls, Text } from \"drei\";\n\ninterface IState {\n    color: string;\n    num: number;\n    orbitControls: boolean;\n    package: string;\n}\n\nexport const Lesson10: React.FC = () => {\n    const ref = useRef<Mesh>(null);\n\n    const [state, setState] = useState<IState | null>({\n        color: \"red\",\n        num: 0,\n        orbitControls: false,\n        package: \"what\",\n    });\n\n    return (\n        <>\n            <Canvas\n                colorManagement\n                shadowMap\n                camera={{\n                    fov: 45,\n                    position: [1, 1, 5],\n                }}\n                style={{\n                    position: \"absolute\",\n                }}\n            >\n                {state?.orbitControls ? <OrbitControls /> : null}\n                <DefaultLights />\n                <mesh ref={ref}>\n                    <boxGeometry args={[1, 1, 1]} />\n                    <meshPhongMaterial color={state?.color ?? \"red\"} />\n                </mesh>\n                <Text\n                    position={[0, 1, 1]}\n                    color=\"black\"\n                    fontSize={0.5}\n                    maxWidth={200}\n                    lineHeight={1}\n                    letterSpacing={0.02}\n                    textAlign={\"left\"}\n                    font=\"https://fonts.gstatic.com/s/raleway/v14/1Ptrg8zYS_SKggPNwK4vaqI.woff\"\n                    anchorX=\"center\"\n                    anchorY=\"middle\"\n                >\n                    {state?.package ?? \"hello\"}\n                </Text>\n                <Text\n                    position={[0, -1, 1]}\n                    color=\"black\"\n                    fontSize={0.5}\n                    maxWidth={200}\n                    lineHeight={1}\n                    letterSpacing={0.02}\n                    textAlign={\"left\"}\n                    font=\"https://fonts.gstatic.com/s/raleway/v14/1Ptrg8zYS_SKggPNwK4vaqI.woff\"\n                    anchorX=\"center\"\n                    anchorY=\"middle\"\n                >\n                    num: {state?.num}\n                </Text>\n            </Canvas>\n\n            <DatGui\n                data={state}\n                onUpdate={(newState) => {\n                    setState(newState);\n                }}\n            >\n                <DatString path=\"package\" label=\"Package\" />\n                <DatNumber path=\"num\" label=\"num\" min={-10} max={10} step={1} />\n                <DatBoolean path=\"orbitControls\" label=\"Orbit Control\" />\n                <DatColor path=\"color\" label=\"Color\" />\n            </DatGui>\n        </>\n    );\n};\n","import { Switch, Typography } from \"@material-ui/core\";\nimport { Html, OrbitControls } from \"drei\";\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { Canvas } from \"react-three-fiber\";\nimport { TextureLoader, Mesh, NearestFilter, LinearFilter } from \"three\";\n\nexport const Lesson11: React.FC = () => {\n    const ref = useRef<Mesh>(null);\n    const loader = new TextureLoader();\n    const texture = loader.load(\n        `${process.env.PUBLIC_URL}/assets/textures/door/color.jpg`\n    );\n\n    const dimondTexture = loader.load(\n        `${process.env.PUBLIC_URL}/assets/textures/minecraft.png`\n    );\n\n    const [f, setF] = useState(false);\n\n    useEffect(() => {\n        dimondTexture.magFilter = f ? NearestFilter : LinearFilter;\n    }, [f]);\n\n    return (\n        <Canvas\n            colorManagement\n            shadowMap\n            camera={{\n                fov: 45,\n                position: [1, 1, 5],\n            }}\n        >\n            <OrbitControls />\n            <mesh ref={ref}>\n                <boxGeometry args={[1, 1, 1]} />\n                <meshBasicMaterial map={texture} />\n            </mesh>\n            <mesh ref={ref} position={[2, 0, 0]}>\n                <boxGeometry args={[1, 1, 1]} />\n                <meshBasicMaterial map={dimondTexture} />\n            </mesh>\n            <Html position={[2, 1, 0]}>\n                <Typography>magFilter == NearestFilter?</Typography>\n                <Switch\n                    checked={f}\n                    onChange={(e, v) => {\n                        setF(v);\n                    }}\n                />\n            </Html>\n        </Canvas>\n    );\n};\n","import { OrbitControls } from \"drei\";\nimport React, { useRef, useState } from \"react\";\nimport { Canvas, useFrame, useThree } from \"react-three-fiber\";\nimport {\n    CubeTextureLoader,\n    DoubleSide,\n    Material,\n    Mesh,\n    MeshBasicMaterial,\n    MeshDepthMaterial,\n    MeshLambertMaterial,\n    MeshMatcapMaterial,\n    MeshNormalMaterial,\n    MeshPhongMaterial,\n    MeshStandardMaterial,\n    MeshToonMaterial,\n    Texture,\n    TextureLoader,\n} from \"three\";\nimport { DefaultLights } from \"../../components/DefaultLights\";\nimport DatGui, { DatSelect, DatNumber, DatBoolean } from \"react-dat-gui\";\nimport \"react-dat-gui/dist/index.css\";\nimport { isUndefined } from \"lodash\";\n\ninterface IProps {\n    material: Material;\n    opacity: number;\n    double_sided: boolean;\n    metalness?: number;\n    roughness?: number;\n    showSkyBox: boolean;\n}\n\nconst Content: React.FC<IProps> = ({\n    material,\n    opacity,\n    double_sided,\n    metalness,\n    roughness,\n    showSkyBox,\n}) => {\n    const square = useRef<Mesh>(null);\n    const donut = useRef<Mesh>(null);\n    const plane = useRef<Mesh>(null);\n\n    useFrame(() => {\n        if (donut.current) {\n            donut.current.rotation.y += 0.01;\n            donut.current.rotation.x += 0.01;\n        }\n\n        if (square.current) {\n            square.current.rotation.y -= 0.01;\n            square.current.rotation.x += 0.01;\n        }\n\n        if (plane.current) {\n            plane.current.rotation.z += 0.02;\n        }\n    });\n\n    material.opacity = opacity;\n    material.transparent = material.transparent || opacity < 1;\n    if (double_sided) {\n        material.side = DoubleSide;\n    }\n\n    if (!isUndefined(metalness)) {\n        (material as MeshStandardMaterial).metalness = metalness;\n    }\n\n    if (!isUndefined(roughness)) {\n        (material as MeshStandardMaterial).roughness = roughness;\n    }\n\n    const { scene } = useThree();\n\n    if (material instanceof MeshStandardMaterial && showSkyBox) {\n        material.envMap = scene.background as Texture;\n    }\n\n    return (\n        <>\n            <DefaultLights />\n            <OrbitControls />\n            <mesh ref={square} material={material} position={[-1.5, 0, 0]}>\n                <sphereGeometry args={[0.5, 16, 16]} />\n            </mesh>\n            <mesh ref={donut} material={material} position={[1.5, 0, 0]}>\n                <torusGeometry args={[0.3, 0.2, 32, 64]} />\n            </mesh>\n            <mesh ref={plane} material={material}>\n                <planeGeometry args={[1, 1, 64, 64]} />\n            </mesh>\n            {showSkyBox ? <SkyBox /> : null}\n        </>\n    );\n};\n\nexport const Lesson12: React.FC = () => {\n    /// load textures\n    const textureLoader = new TextureLoader();\n\n    const doorColorTexture = textureLoader.load(\n        `${process.env.PUBLIC_URL}/assets/textures/door/color.jpg`\n    );\n    const doorAlphaTexture = textureLoader.load(\n        `${process.env.PUBLIC_URL}/assets/textures/door/alpha.jpg`\n    );\n    const matcapTexture = textureLoader.load(\n        `${process.env.PUBLIC_URL}/assets/textures/matcaps/8.png`\n    );\n    const doorHeightTexture = textureLoader.load(\n        `${process.env.PUBLIC_URL}/assets/textures/door/height.jpg`\n    );\n    const doorNormalTexture = textureLoader.load(\n        `${process.env.PUBLIC_URL}/assets/textures/door/normal.jpg`\n    );\n\n    const materialMap: { [key: string]: Material } = {\n        basic: new MeshBasicMaterial(),\n        colored_door: new MeshBasicMaterial({ map: doorColorTexture }),\n        red_door: new MeshBasicMaterial({\n            color: 0xff0011,\n            map: doorColorTexture,\n        }),\n        alpha_color_door: new MeshBasicMaterial({\n            alphaMap: doorAlphaTexture,\n            map: doorColorTexture,\n            transparent: true,\n        }),\n        wireframe: new MeshBasicMaterial({\n            color: \"green\",\n            wireframe: true,\n        }),\n        normal_material: new MeshNormalMaterial({\n            flatShading: true,\n        }),\n        matcap: new MeshMatcapMaterial({\n            matcap: matcapTexture,\n        }),\n        depth: new MeshDepthMaterial(),\n        lambert: new MeshLambertMaterial({\n            color: \"lightblue\",\n        }),\n        phong: new MeshPhongMaterial({\n            color: \"lightblue\",\n        }),\n        toon: new MeshToonMaterial({\n            color: \"blue\",\n        }),\n        standard: new MeshStandardMaterial(),\n        displacement_map: new MeshStandardMaterial({\n            map: doorColorTexture,\n            displacementMap: doorHeightTexture,\n            displacementScale: 0.1,\n        }),\n        displacement_map_wireframe: new MeshStandardMaterial({\n            map: doorColorTexture,\n            displacementMap: doorHeightTexture,\n            wireframe: true,\n            displacementScale: 0.1,\n        }),\n        disp_and_normal: new MeshStandardMaterial({\n            map: doorColorTexture,\n            displacementMap: doorHeightTexture,\n            normalMap: doorNormalTexture,\n            displacementScale: 0.1,\n        }),\n        disp_and_normal_and_alpha: new MeshStandardMaterial({\n            map: doorColorTexture,\n            displacementMap: doorHeightTexture,\n            normalMap: doorNormalTexture,\n            displacementScale: 0.1,\n            alphaMap: doorAlphaTexture,\n        }),\n    };\n\n    /// DatUI states\n    const [state, setState] = useState({\n        material: \"colored_door\",\n        opacity: 1,\n        double_sided: false,\n        metalness: 0,\n        roughness: 0,\n        showSkyBox: false,\n    });\n\n    return (\n        <>\n            <Canvas\n                colorManagement\n                shadowMap\n                camera={{\n                    fov: 45,\n                    position: [0, 0, 6],\n                }}\n            >\n                <Content\n                    material={materialMap[state.material]}\n                    opacity={state.opacity}\n                    double_sided={state.double_sided}\n                    metalness={\n                        materialMap[state.material] instanceof\n                        MeshStandardMaterial\n                            ? state.metalness\n                            : undefined\n                    }\n                    roughness={\n                        materialMap[state.material] instanceof\n                        MeshStandardMaterial\n                            ? state.roughness\n                            : undefined\n                    }\n                    showSkyBox={state.showSkyBox}\n                />\n            </Canvas>\n            <DatGui\n                data={state}\n                onUpdate={(newState) => {\n                    setState(newState);\n                }}\n            >\n                <DatSelect path=\"material\" options={Object.keys(materialMap)} />\n                <DatNumber\n                    path=\"opacity\"\n                    label=\"opacity\"\n                    min={0}\n                    max={1}\n                    step={0.1}\n                />\n                <DatBoolean path=\"double_sided\" label=\"double_sided\" />\n                <DatNumber\n                    path=\"metalness\"\n                    label=\"metalness\"\n                    min={0}\n                    max={1}\n                    step={0.1}\n                />\n                <DatNumber\n                    path=\"roughness\"\n                    label=\"roughness\"\n                    min={0}\n                    max={1}\n                    step={0.1}\n                />\n                <DatBoolean path=\"showSkyBox\" label=\"showSkyBox\" />\n            </DatGui>\n        </>\n    );\n};\n\nconst SkyBox = () => {\n    const { scene } = useThree();\n    const loader = new CubeTextureLoader();\n    scene.background = loader.load(\n        [\n            `${process.env.PUBLIC_URL}/assets/textures/env_maps/1/px.jpg`,\n            `${process.env.PUBLIC_URL}/assets/textures/env_maps/1/nx.jpg`,\n            `${process.env.PUBLIC_URL}/assets/textures/env_maps/1/py.jpg`,\n            `${process.env.PUBLIC_URL}/assets/textures/env_maps/1/ny.jpg`,\n            `${process.env.PUBLIC_URL}/assets/textures/env_maps/1/pz.jpg`,\n            `${process.env.PUBLIC_URL}/assets/textures/env_maps/1/nz.jpg`,\n        ],\n        undefined,\n        undefined,\n        (e) => {\n            console.log(e);\n        }\n    );\n\n    return null;\n};\n","import { OrbitControls } from \"drei\";\nimport React, { Suspense, useCallback, useMemo } from \"react\";\nimport { Canvas, useLoader } from \"react-three-fiber\";\nimport {\n    FontLoader,\n    MeshMatcapMaterial,\n    TextGeometry,\n    TextGeometryParameters,\n    TextureLoader,\n    TorusGeometry,\n} from \"three\";\nimport { DefaultLights } from \"../../components/DefaultLights\";\n\nexport const Lesson13: React.FC = () => {\n    return (\n        <Suspense fallback={null}>\n            <Content />\n        </Suspense>\n    );\n};\n\nconst Content: React.FC = () => {\n    const font = useLoader(\n        FontLoader,\n        `${process.env.PUBLIC_URL}/assets/fonts/helvetiker_regular.typeface.json`\n    );\n    const textOptions: TextGeometryParameters = useMemo(\n        () => ({\n            font,\n            size: 0.5,\n            height: 0.2,\n            curveSegments: 8,\n            bevelEnabled: true,\n            bevelThickness: 0.05,\n            bevelOffset: 0,\n            bevelSize: 0.05,\n            bevelSegments: 4,\n        }),\n        [font]\n    );\n\n    /// use bounding boxes to center the text\n    // const mesh = useCallback((mesh: Mesh) => {\n    //     if (mesh) {\n    //         const size = new Vector3();\n    //         mesh.geometry.computeBoundingBox();\n    //         mesh.geometry.boundingBox?.getSize(size);\n    //         mesh.position.x = -size.x / 2;\n    //         mesh.position.y = -size.y / 2;\n    //         mesh.position.z = -size.z / 2;\n    //     }\n    // }, []);\n\n    const geoRef = useCallback((geo: TextGeometry) => {\n        if (geo) {\n            geo.center();\n        }\n    }, []);\n\n    const matcapTexture = useLoader(\n        TextureLoader,\n        `${process.env.PUBLIC_URL}/assets/textures/matcaps/8.png`\n    );\n\n    // optimize the performance of creating 100 of the donuts...\n    const donutGeometry = new TorusGeometry(0.15, 0.1, 20, 45);\n    const donutMaterial = new MeshMatcapMaterial({ matcap: matcapTexture });\n\n    return (\n        <Canvas\n            colorManagement\n            shadowMap\n            camera={{\n                fov: 45,\n                position: [1, 1, 5],\n            }}\n        >\n            <DefaultLights />\n            <OrbitControls />\n            {/* <axesHelper /> */}\n            <mesh /*ref={mesh}*/>\n                <textGeometry\n                    ref={geoRef}\n                    attach=\"geometry\"\n                    args={[\"Hello World\", textOptions]}\n                />\n                {/* <meshMatcapMaterial color=\"lightblue\" matcap={matcapTexture} /> */}\n                <primitive object={donutMaterial} attach=\"material\" />\n            </mesh>\n            {[...Array(100)].map((_, i) => (\n                <Donut\n                    key={i}\n                    position={[\n                        Math.random() * 8 - 4,\n                        Math.random() * 8 - 4,\n                        Math.random() * 8 - 4,\n                    ]}\n                    rotation={[\n                        Math.random() * Math.PI,\n                        Math.random() * Math.PI,\n                        Math.random() * Math.PI,\n                    ]}\n                    scale={0.5 + 0.5 * Math.random()}\n                >\n                    <primitive object={donutGeometry} attach=\"geometry\" />\n                    <primitive object={donutMaterial} attach=\"material\" />\n                    {/* <torusGeometry args={[0.15, 0.1, 20, 45]} />\n                    <meshMatcapMaterial color=\"lightblue\" matcap={matcapTexture}/> */}\n                </Donut>\n            ))}\n        </Canvas>\n    );\n};\n\ninterface IDonutProps {\n    position: [number, number, number];\n    rotation: [number, number, number];\n    scale: number;\n}\n\nconst Donut: React.FC<IDonutProps> = ({\n    position,\n    rotation,\n    scale,\n    children,\n}) => {\n    return (\n        <mesh\n            position={position}\n            rotation={rotation}\n            scale={[scale, scale, scale]}\n        >\n            {children}\n        </mesh>\n    );\n};\n","import { OrbitControls, useHelper } from \"drei\";\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { Canvas, useThree } from \"react-three-fiber\";\nimport {\n    Camera,\n    DirectionalLight,\n    DirectionalLightHelper,\n    HemisphereLightHelper,\n    Mesh,\n    MeshStandardMaterial,\n    Object3D,\n    PCFSoftShadowMap,\n    PointLightHelper,\n    SpotLightHelper,\n} from \"three\";\n\nexport const Lesson14: React.FC = () => {\n    return (\n        <Canvas\n            colorManagement\n            shadowMap\n            camera={{\n                fov: 45,\n                position: [1, 2, 8],\n            }}\n            onCreated={(state) => state.gl.setClearColor(\"black\")}\n        >\n            <Content />\n        </Canvas>\n    );\n};\n\nconst Content: React.FC = () => {\n    const material = new MeshStandardMaterial({ roughness: 0.4 });\n    const { gl } = useThree();\n    gl.shadowMap.type = PCFSoftShadowMap;\n\n    return (\n        <>\n            <Lights />\n            <OrbitControls />\n            <mesh position={[-1.5, 0, 0]} material={material} castShadow>\n                <sphereGeometry args={[0.5, 16, 16]} />\n            </mesh>\n            <mesh position={[1.5, 0, 0]} material={material} castShadow>\n                <torusGeometry args={[0.3, 0.2, 32, 64]} />\n            </mesh>\n            <mesh material={material} castShadow>\n                <boxGeometry args={[0.75, 0.75, 0.75]} />\n            </mesh>\n            <mesh\n                receiveShadow\n                rotation={[-0.5 * Math.PI, 0, 0]}\n                position={[0, -1, 0]}\n                material={material}\n            >\n                <planeGeometry args={[5, 5]} />\n            </mesh>\n        </>\n    );\n};\n\nconst Lights: React.FC = () => {\n    const spotLightTarget = new Object3D();\n    spotLightTarget.position.x = -0.75;\n\n    const directionalLightRef = useRef<DirectionalLight | undefined>(undefined);\n    const pointLightRef = useRef<Mesh | undefined>(undefined);\n    const spotLightRef = useRef<Mesh | undefined>(undefined);\n    const hemisphereLightRef = useRef<Mesh | undefined>(undefined);\n\n    useHelper(directionalLightRef, DirectionalLightHelper, 0.2);\n    useHelper(pointLightRef, PointLightHelper, 0.2, \"yellow\");\n    useHelper(spotLightRef, SpotLightHelper, \"teal\");\n    useHelper(hemisphereLightRef, HemisphereLightHelper, 0.2);\n\n    const [dCamera, setCamera] = useState<Camera | undefined>(undefined);\n\n    useEffect(() => {\n        // console.log(directionalLightRef.current?.shadow.camera);\n        const s = directionalLightRef.current?.shadow;\n        if (s) {\n            s.mapSize.set(1024, 1024);\n\n            const c = s.camera;\n            // by setting the range of the orthographic camera, we are boosting perfomance\n            // since the showdow map would be smaller\n            c.top = 2;\n            c.bottom = -2;\n            c.left = -2;\n            c.right = 2;\n            c.near = 1;\n            c.far = 4;\n        }\n        setCamera(s?.camera);\n    });\n\n    return (\n        <group>\n            <ambientLight color={0xffffff} intensity={0.1} />\n            <directionalLight\n                ref={directionalLightRef}\n                color={0x00fffc}\n                intensity={0.3}\n                position={[1, 0.25, 0]}\n                castShadow\n            />\n            <hemisphereLight\n                args={[0xff0000, 0x0000ff, 1]}\n                ref={hemisphereLightRef}\n            />\n            <pointLight\n                args={[0xff9000, 1, 10, 2]}\n                ref={pointLightRef}\n                position={[1, -0.5, 1]}\n                castShadow\n            />\n            <rectAreaLight\n                args={[0x4e00ff, 2, 1, 1]}\n                position={[-1.5, 0, 1.5]}\n            />\n            <spotLight\n                args={[0x78ff00, 1, 10, 0.3, 0.25, 1]}\n                ref={spotLightRef}\n                position={[0, 2, 3]}\n                target={spotLightTarget}\n                castShadow\n            />\n            <primitive object={spotLightTarget} />\n            {dCamera ? <cameraHelper args={[dCamera]} /> : null}\n        </group>\n    );\n};\n","import { useCallback } from \"react\";\nimport { BufferGeometry, Float32BufferAttribute } from \"three\";\n\nexport const useUv2 = (): ((g: BufferGeometry) => void) => {\n    return useCallback((g: BufferGeometry) => {\n        if (g) {\n            g.setAttribute(\n                \"uv2\",\n                new Float32BufferAttribute(g.attributes.uv.array, 2)\n            );\n        }\n    }, []);\n};\n","import { OrbitControls } from \"drei\";\nimport React, { Suspense, useCallback, useRef } from \"react\";\nimport { Canvas, GroupProps, useFrame, useLoader } from \"react-three-fiber\";\nimport {\n    BoxBufferGeometry,\n    DirectionalLight,\n    Mesh,\n    MeshStandardMaterial,\n    PCFSoftShadowMap,\n    PointLight,\n    RepeatWrapping,\n    SphereBufferGeometry,\n    TextureLoader,\n} from \"three\";\nimport { useUv2 } from \"../../utils/hooks/useUv2\";\n\nexport const Lesson15: React.FC = () => {\n    return (\n        <Canvas\n            camera={{\n                fov: 75,\n                position: [4, 2, 5],\n                far: 100,\n                near: 0.1,\n            }}\n            onCreated={(state) => {\n                state.gl.setClearColor(0x262837);\n                state.gl.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n                state.gl.shadowMap.type = PCFSoftShadowMap;\n            }}\n            shadowMap\n        >\n            <OrbitControls zoomSpeed={0.5} />\n            <Lights />\n            <fog attach=\"fog\" args={[0x262837, 1, 20]} />\n            <House position={[0, 0, 0]} />\n            <Graves />\n            <Ghosts />\n            <Suspense fallback={null}>\n                <Floor />\n            </Suspense>\n        </Canvas>\n    );\n};\n\n// =========================================================================\n// House\n// =========================================================================\nconst House: React.FC<GroupProps> = (props) => {\n    return (\n        <group {...props}>\n            <Suspense fallback={null}>\n                <Walls />\n                <Roof />\n                <Door />\n                <Bushes />\n            </Suspense>\n        </group>\n    );\n};\n\nconst Walls: React.FC = () => {\n    const colorTexture = useLoader(\n        TextureLoader,\n        `${process.env.PUBLIC_URL}/assets/textures/bricks/color.jpg`\n    );\n    const roughnessTexture = useLoader(\n        TextureLoader,\n        `${process.env.PUBLIC_URL}/assets/textures/bricks/roughness.jpg`\n    );\n    const aoTexture = useLoader(\n        TextureLoader,\n        `${process.env.PUBLIC_URL}/assets/textures/bricks/ambientOcclusion.jpg`\n    );\n    const normalTexture = useLoader(\n        TextureLoader,\n        `${process.env.PUBLIC_URL}/assets/textures/bricks/normal.jpg`\n    );\n\n    const geoRef = useUv2();\n\n    return (\n        <mesh position={[0, 2.5 / 2, 0]}>\n            <boxBufferGeometry args={[4, 2.5, 4]} ref={geoRef} />\n            <meshStandardMaterial\n                args={[\n                    {\n                        map: colorTexture,\n                        aoMap: aoTexture,\n                        normalMap: normalTexture,\n                        roughnessMap: roughnessTexture,\n                    },\n                ]}\n            />\n        </mesh>\n    );\n};\n\nconst Roof: React.FC = () => {\n    return (\n        <mesh position={[0, 3.5, 0]} rotation={[0, Math.PI / 4, 0]}>\n            <coneBufferGeometry args={[3.5, 2, 4]} />\n            <meshStandardMaterial color={0xb35f45} />\n        </mesh>\n    );\n};\n\nconst Door: React.FC = () => {\n    const colorTexture = useLoader(\n        TextureLoader,\n        `${process.env.PUBLIC_URL}/assets/textures/door/color.jpg`\n    );\n    const alphaTexture = useLoader(\n        TextureLoader,\n        `${process.env.PUBLIC_URL}/assets/textures/door/alpha.jpg`\n    );\n    const aoTexture = useLoader(\n        TextureLoader,\n        `${process.env.PUBLIC_URL}/assets/textures/door/ambientOcclusion.jpg`\n    );\n    const normalTexture = useLoader(\n        TextureLoader,\n        `${process.env.PUBLIC_URL}/assets/textures/door/normal.jpg`\n    );\n    const metalnessTexture = useLoader(\n        TextureLoader,\n        `${process.env.PUBLIC_URL}/assets/textures/door/metalness.jpg`\n    );\n    const roughnessTexture = useLoader(\n        TextureLoader,\n        `${process.env.PUBLIC_URL}/assets/textures/door/roughness.jpg`\n    );\n    const heightTexture = useLoader(\n        TextureLoader,\n        `${process.env.PUBLIC_URL}/assets/textures/door/height.jpg`\n    );\n\n    // add uv2 coordinates to use aoMap\n    const geoRef = useUv2();\n\n    const doorLight = useRef<PointLight>(null);\n\n    useFrame(({ clock }) => {\n        if (doorLight.current) {\n            const elapsed = clock.getElapsedTime() * 0.5;\n            if (Math.sin(elapsed) > 0.98) {\n                doorLight.current.intensity = Math.random();\n            } else {\n                doorLight.current.intensity = 1;\n            }\n        }\n    });\n\n    return (\n        <>\n            <pointLight\n                ref={doorLight}\n                position={[0, 2.2, 2.6]}\n                color={0xff7d46}\n                intensity={1}\n                distance={8}\n                castShadow\n            />\n            <mesh position={[0, 1, 2.01]}>\n                <planeBufferGeometry ref={geoRef} args={[2.2, 2.2, 100, 100]} />\n                <meshStandardMaterial\n                    transparent\n                    args={[\n                        {\n                            map: colorTexture,\n                            alphaMap: alphaTexture,\n                            aoMap: aoTexture,\n                            displacementMap: heightTexture,\n                            displacementScale: 0.1,\n                            normalMap: normalTexture,\n                            metalnessMap: metalnessTexture,\n                            roughnessMap: roughnessTexture,\n                        },\n                    ]}\n                />\n            </mesh>\n        </>\n    );\n};\n\n// =========================================================================\n// Graves\n// =========================================================================\nconst Graves: React.FC = () => {\n    const geometry = new BoxBufferGeometry(0.6, 0.8, 0.2);\n    const material = new MeshStandardMaterial({ color: 0xb2b6b1 });\n\n    return (\n        <group>\n            {[...Array(50)].map((_, i) => {\n                const angle = Math.random() * Math.PI * 2;\n                const x = Math.sin(angle);\n                const z = Math.cos(angle);\n                const dist = 3 + Math.random() * 6;\n                return (\n                    <mesh\n                        castShadow\n                        key={i}\n                        geometry={geometry}\n                        material={material}\n                        position={[x * dist, 0.3, z * dist]}\n                        rotation={[\n                            0,\n                            (Math.random() - 0.5) * 0.4,\n                            (Math.random() - 0.5) * 0.4,\n                        ]}\n                    />\n                );\n            })}\n        </group>\n    );\n};\n\n// =========================================================================\n// Bushes\n// =========================================================================\nconst Bushes: React.FC = () => {\n    const geometry = new SphereBufferGeometry(1, 16, 16);\n    const material = new MeshStandardMaterial({ color: 0x89c854 });\n    return (\n        <group>\n            <mesh\n                scale={[0.5, 0.5, 0.5]}\n                position={[0.8, 0.2, 2.2]}\n                geometry={geometry}\n                material={material}\n                castShadow\n            />\n            <mesh\n                scale={[0.25, 0.25, 0.25]}\n                position={[1.4, 0.1, 2.1]}\n                geometry={geometry}\n                material={material}\n                castShadow\n            />\n            <mesh\n                scale={[0.4, 0.4, 0.4]}\n                position={[-0.8, 0.1, 2.2]}\n                geometry={geometry}\n                material={material}\n                castShadow\n            />\n            <mesh\n                scale={[0.2, 0.2, 0.2]}\n                position={[-1.2, 0.05, 2.4]}\n                geometry={geometry}\n                material={material}\n                castShadow\n            />\n            <mesh\n                scale={[0.15, 0.15, 0.15]}\n                position={[-1, 0.05, 2.6]}\n                geometry={geometry}\n                material={material}\n                castShadow\n            />\n        </group>\n    );\n};\n\n// =========================================================================\n// Ghosts\n// =========================================================================\nconst Ghosts: React.FC = () => {\n    const ghost1 = useRef<Mesh>(null);\n    const ghost2 = useRef<Mesh>(null);\n    const ghost3 = useRef<Mesh>(null);\n    const rand1 = Math.random();\n\n    useFrame(({ clock }) => {\n        const elapsed = clock.getElapsedTime();\n\n        if (ghost1.current) {\n            ghost1.current.position.set(\n                Math.cos(elapsed) * 5 + Math.sin(elapsed) * rand1,\n                Math.sin(elapsed) * 2,\n                Math.sin(elapsed) * 5\n            );\n        }\n\n        if (ghost2.current) {\n            const angle = elapsed * 0.5;\n            ghost2.current.position.set(\n                Math.sin(angle) * 6,\n                Math.sin(angle * 4),\n                Math.cos(angle) * 6\n            );\n        }\n\n        if (ghost3.current) {\n            const angle = elapsed * 0.2;\n            ghost3.current.position.set(\n                Math.sin(angle) * (7 + Math.cos(elapsed * 0.3)),\n                Math.sin(angle),\n                Math.cos(angle) * (7 + Math.sin(elapsed * 0.3))\n            );\n        }\n    });\n\n    return (\n        <>\n            <pointLight ref={ghost1} args={[0xff00ff, 2, 3]} castShadow />\n            <pointLight ref={ghost2} args={[0x00ffff, 2, 3]} castShadow />\n            <pointLight ref={ghost3} args={[0xffff00, 2, 3]} castShadow />\n        </>\n    );\n};\n\n// =========================================================================\n// Floor\n// =========================================================================\nconst Floor: React.FC = () => {\n    // add uv2 coordinates to use aoMap\n    const geoRef = useUv2();\n\n    const colorTexture = useLoader(\n        TextureLoader,\n        `${process.env.PUBLIC_URL}/assets/textures/grass/color.jpg`\n    );\n    const aoTexture = useLoader(\n        TextureLoader,\n        `${process.env.PUBLIC_URL}/assets/textures/grass/ambientOcclusion.jpg`\n    );\n    const normalTexture = useLoader(\n        TextureLoader,\n        `${process.env.PUBLIC_URL}/assets/textures/grass/normal.jpg`\n    );\n    const roughnessTexture = useLoader(\n        TextureLoader,\n        `${process.env.PUBLIC_URL}/assets/textures/grass/roughness.jpg`\n    );\n\n    for (const t of [\n        colorTexture,\n        aoTexture,\n        normalTexture,\n        roughnessTexture,\n    ]) {\n        t.repeat.set(8, 8);\n        t.wrapS = RepeatWrapping;\n        t.wrapT = RepeatWrapping;\n    }\n\n    return (\n        <mesh rotation={[-Math.PI * 0.5, 0, 0]} receiveShadow>\n            <planeBufferGeometry args={[20, 20]} ref={geoRef} />\n            <meshStandardMaterial\n                args={[\n                    {\n                        map: colorTexture,\n                        aoMap: aoTexture,\n                        normalMap: normalTexture,\n                        roughnessMap: roughnessTexture,\n                    },\n                ]}\n            />\n        </mesh>\n    );\n};\n\n// =========================================================================\n// Lights\n// =========================================================================\nconst Lights: React.FC = () => {\n    const directionalLightRef = useCallback((l: DirectionalLight) => {\n        if (l) {\n            l.shadow.mapSize.width = 256;\n            l.shadow.mapSize.height = 256;\n            l.shadow.camera.far = 15;\n        }\n    }, []);\n\n    return (\n        <>\n            <ambientLight color={0xb9d5ff} intensity={0.1} />\n            <directionalLight\n                ref={directionalLightRef}\n                position={[4, 5, -2]}\n                color={0xb9d5ff}\n                intensity={0.15}\n                castShadow\n            />\n        </>\n    );\n};\n","import React from \"react\";\nimport { Example01 } from \"./Example01\";\nimport { Example02 } from \"./Example02\";\nimport { Example03 } from \"./Example03\";\nimport { Example04 } from \"./Example04\";\nimport { Example05 } from \"./Example05\";\nimport { Snippet01 } from \"./Snippet01\";\nimport { Example06 } from \"./Example06\";\n\nimport { Lesson03 } from \"./journey/Lesson03\";\nimport { Lesson10 } from \"./journey/Lesson10\";\nimport { Lesson11 } from \"./journey/Lesson11\";\nimport { Lesson12 } from \"./journey/Lesson12\";\nimport { Lesson13 } from \"./journey/Lesson13\";\nimport { Lesson14 } from \"./journey/Lesson14\";\nimport { Lesson15 } from \"./journey/Lesson15\";\n\ninterface Page {\n    render: () => JSX.Element;\n    path: string;\n    title?: string;\n    description?: string;\n}\n\nexport const allExamples: Page[] = [\n    {\n        render: () => <Example01 />,\n        path: \"/example-01\",\n        description: \"Basic Concepts\",\n    },\n    {\n        render: () => <Example02 />,\n        path: \"/example-02\",\n        description: \"Basic Concepts cont\",\n    },\n    {\n        render: () => <Example03 />,\n        path: \"/example-03\",\n        description: \"Cameras Perspective vs. Orthographic \",\n    },\n    { render: () => <Example04 />, path: \"/example-04\", description: \"Lights\" },\n    {\n        render: () => <Example05 />,\n        path: \"/example-05\",\n        description: \"Materials (1)\",\n    },\n    {\n        render: () => <Example06 />,\n        path: \"/example-06\",\n    },\n];\n\nexport const otherExamples: Page[] = [\n    {\n        render: () => <Snippet01 />,\n        path: \"/snippet-01\",\n        description: \"Basic Concepts\",\n        title: \"Zoom on load\",\n    },\n];\n\nexport const threeJsJourney: Page[] = [\n    { render: () => <Lesson03 />, path: \"/lesson-03\", title: \"Lesson03\" },\n    { render: () => <Lesson10 />, path: \"/lesson-10\", title: \"Lesson10\" },\n    { render: () => <Lesson11 />, path: \"/lesson-11\", title: \"Lesson11\" },\n    { render: () => <Lesson12 />, path: \"/lesson-12\", title: \"Lesson12\" },\n    { render: () => <Lesson13 />, path: \"/lesson-13\", title: \"Lesson13\" },\n    { render: () => <Lesson14 />, path: \"/lesson-14\", title: \"Lesson14\" },\n    { render: () => <Lesson15 />, path: \"/lesson-15\", title: \"HauntedHouse\" },\n];\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { OrbitControls, useGLTF } from \"drei\";\nimport { Canvas, GroupProps, PrimitiveProps } from \"react-three-fiber\";\nimport React, { Suspense, useMemo, useState } from \"react\";\nimport { GLTF, GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\nimport { PlaneAndAxis } from \"./PlanAndAxis\";\n\nconst MODEL_PATH = `${process.env.PUBLIC_URL}/assets/objects/Character.gltf`;\n\nexport const MyCharacter = () => {\n    return (\n        <Canvas\n            camera={{\n                position: [0, 0, -20],\n            }}\n        >\n            <Suspense fallback={null}>\n                <ambientLight />\n                <pointLight position={[10, 30, 10]} />\n                <pointLight position={[10, 30, -10]} />\n                <mesh>\n                    <Model path={MODEL_PATH} position={[0, 5, -15]} />\n                </mesh>\n                <OrbitControls />\n                {/*<PlaneAndAxis />*/}\n            </Suspense>\n        </Canvas>\n    );\n};\n//\n// const Model: React.FC<GroupProps> = (props) => {\n//     const [gltf, set] = useState<GLTF | undefined>(undefined);\n//     useMemo(() => new GLTFLoader().load(MODEL_PATH, set), [MODEL_PATH]);\n//     return gltf ? <primitive {...props} object={gltf.scene} /> : null;\n// };\n\nconst Model: React.FC<{ path: string } & Omit<PrimitiveProps, \"object\">> = ({\n    path,\n    ...rest\n}) => {\n    const gltf = useGLTF(path, true);\n    return <primitive {...rest} object={gltf.scene} dispose={null} />;\n};\n","import { Container, Grid } from \"@material-ui/core\";\nimport React from \"react\";\nimport { allExamples, otherExamples, threeJsJourney } from \"./examplesUtil\";\nimport { Link } from \"react-router-dom\";\nimport { MyCharacter } from \"../components/MyCharacter\";\n\nconst Home: React.FC = () => {\n    return (\n        <Container maxWidth=\"lg\">\n            <Grid item xs={12}>\n                <Grid container justify=\"center\" spacing={2}>\n                    {allExamples.map(({ path }, index) => (\n                        <Grid key={path} item>\n                            <Link to={path}>Example {index + 1}</Link>\n                        </Grid>\n                    ))}\n                </Grid>\n                <Grid container justify=\"center\" spacing={2}>\n                    {otherExamples.map(({ path, title }) => (\n                        <Grid key={path} item>\n                            <Link to={path}>{title}</Link>\n                        </Grid>\n                    ))}\n                </Grid>\n                <Grid container justify=\"center\" spacing={2}>\n                    {threeJsJourney.map(({ path, title }) => (\n                        <Grid key={path} item>\n                            <Link to={path}>{title}</Link>\n                        </Grid>\n                    ))}\n                </Grid>\n            </Grid>\n            <Container style={{ width: \"100%\", height: window.innerHeight }}>\n                <MyCharacter />\n            </Container>\n        </Container>\n    );\n};\n\nexport default Home;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport {\n    allExamples,\n    otherExamples,\n    threeJsJourney,\n} from \"./pages/examplesUtil\";\n\nconst App: React.FC = () => {\n    return (\n        <Router basename={process.env.PUBLIC_URL}>\n            <Switch>\n                {[...allExamples, ...otherExamples, ...threeJsJourney].map(\n                    ({ render, path }) => (\n                        <Route key={path} exact path={path} render={render} />\n                    )\n                )}\n\n                <Route exact path=\"/\">\n                    <Home />\n                </Route>\n            </Switch>\n        </Router>\n    );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}